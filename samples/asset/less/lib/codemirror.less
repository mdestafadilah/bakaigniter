// BASICS
// --------------------- 

.CodeMirror {
  // Set height, width, borders, and global font properties here 
  font-family: @font-family-monospace;
  height: 300px;
  line-height: 1.2em;
  position: relative;
  overflow: hidden;
  background: white;
  color: black;

  pre {
    // Horizontal padding of content 
    padding: 0 4px;
    // Reset some styles that the rest of the page might have set 
    -moz-border-radius: 0;
    -webkit-border-radius: 0;
    border-radius: 0;
    border-width: 0;
    background: transparent;
    font-family: inherit;
    font-size: inherit;
    margin: 0;
    white-space: pre;
    word-wrap: normal;
    line-height: inherit;
    color: inherit;
    z-index: 2;
    position: relative;
    overflow: visible;
  }

  &-scrollbar-filler,
  &-gutter-filler {
    // The little square between H and V scrollbars 
    background-color: white;
  }

  &-scroll {
    // Set scrolling behaviour here 
    overflow: auto;
    // 30px is the magic margin used to hide the element's real scrollbars 
    // See overflow: hidden in .CodeMirror 
    margin-bottom: -30px;
    margin-right: -30px;
    padding-bottom: 30px;
    height: 100%;
    outline: none; // Prevent dragging from highlighting the element 
    position: relative;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
  }

  // The fake, visible scrollbars. Used to force redraw during scrolling
  // before actuall scrolling happens, thus preventing shaking and
  // flickering artifacts. 
  &-vscrollbar,
  &-hscrollbar,
  &-scrollbar-filler,
  &-gutter-filler {
    position: absolute;
    z-index: 6;
    display: none;
  }

  &-vscrollbar {
    right: 0;
    top: 0;
    overflow-x: hidden;
    overflow-y: scroll;
  }

  &-hscrollbar {
    bottom: 0;
    left: 0;
    overflow-y: hidden;
    overflow-x: scroll;
  }

  &-scrollbar-filler {
    right: 0;
    bottom: 0;
  }

  // LINES
  // --------------------- 

  &-lines {
    // Vertical padding around content 
    padding: 4px 0;
    cursor: text;
  }

  &-linebackground {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 0;
  }

  &-linewidget {
    position: relative;
    z-index: 2;
    overflow: auto;
  }

  // GUTTER
  // --------------------- 

  &-gutters {
    border-right: 1px solid #ddd;
    background-color: #f7f7f7;
    white-space: nowrap;
    position: absolute;
    left: 0; top: 0;
    padding-bottom: 30px;
    z-index: 3;
  }

  &-gutter {
    white-space: normal;
    height: 100%;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
    padding-bottom: 30px;
    margin-bottom: -32px;
    display: inline-block;
    // Hack to make IE7 behave 
    // *zoom:1;
    // *display:inline;

    &-elt {
      position: absolute;
      cursor: default;
      z-index: 4;
    }

    &-filler {
      left: 0;
      bottom: 0;
    }
  }

  // .CodeMirror-linenumbers {}

  &-linenumber {
    padding: 0 3px 0 5px;
    min-width: 20px;
    text-align: right;
    color: #999;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
  }

  // CURSOR
  // --------------------- 

  &-cursors {
    visibility: hidden;
    position: relative;
    z-index: 1;
  }

  &-cursor {
    border-left: 1px solid black;
    position: absolute;
    border-right: none;
    width: 0;
  }

  &-secondarycursor {
  // Shown when moving in bi-directional text 
    border-left: 1px solid silver;
  }

  &.cm-keymap-fat-cursor .CodeMirror-cursor {
    width: auto;
    border: 0;
    background: #7e7;
  }
  // Can style cursor different in overwrite (non-insert) mode 
  // .CodeMirror-overwrite .CodeMirror-cursor {}

  &-ruler {
    border-left: 1px solid #ccc;
    position: absolute;
  }

  &-sizer {
    position: relative;
    border-right: 30px solid transparent;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
  }

  &-wrap {
    pre {
      word-wrap: break-word;
      white-space: pre-wrap;
      word-break: normal;
    }

    .CodeMirror-scroll {
      overflow-x: hidden;
    }
  }

  // &-widget {}

  &-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;

    pre {
      position: static;
    }
  }

  &-selected  { background: #d9d9d9; }
  &-crosshair { cursor: crosshair; }

  &-focused {
    .CodeMirror-cursors {
      visibility: visible;
    }

    .CodeMirror-selected {
      background: #d7d4f0;
    }
  }
}

.cm {
  &-tab          { display: inline-block; }
  &-negative     { color: #d44; }
  &-positive     { color: #292; }
  &-header,
  &-strong       { font-weight: bold; }
  &-em           { font-style: italic; }
  &-link         { text-decoration: underline; }
  &-invalidchar  { color: #f00; }
  &-searching    {
    background: #ffa;
    background: rgba(255, 255, 0, .4);
  }
  // Used to force a border model for a node 
  &-force-border { padding-right: .1px; }
}

.CodeMirror .CodeMirror-matchingbracket     { color: #0f0; }
.CodeMirror .CodeMirror-nonmatchingbracket  { color: #f22; }
.CodeMirror-activeline-background           { background: #e8f2ff; }

// IE7 hack to prevent it from returning funny offsetTops on the spans 
// .CodeMirror span { *vertical-align: text-bottom; 

// DEFAULT THEME
// ---------------------  

.cm-s-default {
  .cm {
    &-keyword    { color: #708; }
    &-atom       { color: #219; }
    &-number     { color: #164; }
    &-def        { color: #00f; }
    // &-variable,
    // &-punctuation,
    // &-property,
    // &-operator {}
    &-variable-2 { color: #05a; }
    &-variable-3 { color: #085; }
    &-comment    { color: #a50; }
    &-string     { color: #a11; }
    &-string-2   { color: #f50; }
    &-meta       { color: #555; }
    &-qualifier  { color: #555; }
    &-builtin    { color: #30a; }
    &-bracket    { color: #997; }
    &-tag        { color: #170; }
    &-attribute  { color: #00c; }
    &-header     { color: blue; }
    &-quote      { color: #090; }
    &-hr         { color: #999; }
    &-link       { color: #00c; }
    &-error      { color: #f00; }
  }
}

// Based on Sublime Text's Monokai theme 
// --------------------- 

.cm-s-monokai {
  &.CodeMirror {
    background: #272822;
    color: #f8f8f2;
  }

  .CodeMirror {
    &-selected              { background: #49483E !important; }
    &-linenumber            { color: #d0d0d0; }
    &-cursor                { border-left: 1px solid #f8f8f0 !important; }
    &-activeline-background { background: #373831 !important; }

    &-gutters {
      background: #272822;
      border-right: 0;
    }

    &-matchingbracket {
      text-decoration: underline;
      color: white !important;
    }
  }

  .cm {
    &-comment    { color: #75715e; }
    &-atom       { color: #ae81ff; }
    &-number     { color: #ae81ff; }
    &-property,
    &-attribute  { color: #a6e22e; }
    &-keyword    { color: #f92672; }
    &-string     { color: #e6db74; }
    &-variable   { color: #a6e22e; }
    &-variable-2 { color: #9effff; }
    &-def        { color: #fd971f; }
    &-bracket    { color: #f8f8f2; }
    &-tag        { color: #f92672; }
    &-link       { color: #ae81ff; }
    &-error {
      background: #f92672;
      color: #f8f8f0;
    }
  }
}

@media print {
  // Hide the cursor when printing 
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}
